README
======
This README outlines the steps required to configure VS Code for debugging
Django and Celery applications. Follow these instructions to setup your
development environment for effective debugging.

Configuring VS Code
-------------------

To get started, you need to add specific configurations to your
'.vscode/launch.json' file to enable attaching the debugger to Django and Celery
processes. Add the following configurations, or copy launch.json from this
directory; alter port numbers to suite your needs:
{
  "version": "0.2.0",
  "configurations": [
    {
      "name": "Attach to Django",
      "type": "python",
      "request": "attach",
      "connect": {
        "host": "localhost",
        "port": 7029
      }
    },
    {
      "name": "Attach to Celery",
      "type": "python",
      "request": "attach",
      "connect": {
        "host": "localhost",
        "port": 7030
      }
    }
  ]
}

Install debugpy
---------------
pip install debugpy

Run Django in debug mode
------------------------
# Uncomment to change the debug port for Django
# export SWIRL_DJANGO_DEBUG_PORT=<port-number>
export SWIRL_ENABLE_DEBUGPY=True
python -Xfrozen_modules=off manage.py runserver

Run Celery in debug mode
------------------------
python -m debugpy --listen <7030 | port-of-your-choice> --wait-for-client -m \
celery -A swirl_server worker --loglevel=info -P solo


Attach the VS Code debugger to the running processes
----------------------------------------------------
With both Django and Celery running, launch VS Code. Navigate to the Run/Debug
menu and proceed to attach the debugger to both Django and Celery.

First, attach to Django by selecting "Attach to Django" from the debug
configurations. Next, attach to Celery by selecting "Attach to Celery".

You are now ready to set breakpoints in your code that runs in either Django
or Celery. Debugging can be started and managed from the Run/Debug menu in VS
Code.