name: SA DockerBuild

on:
  workflow_run:
    workflows: [Docker Build]
    types:
      - completed
    branches: 'main'
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# For debugging
# on:
#   push:
#     branches: ''

jobs:

  build:
    if: (github.event_name == 'workflow_dispatch') || (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success')
    runs-on: ubuntu-latest

    steps:
    - name: Download Branch and run_id Artifacts
      uses: dawidd6/action-download-artifact@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        workflow: docker-image.yml
        name: branch-info-${{ github.event_name == 'workflow_run' && github.event.workflow_run.id || github.run_id }}
        path: ./artifacts
      continue-on-error: true # Allow the step to fail without stopping the workflow
    - name: Determine Branch for Checkout
      id: determine_branch
      run: |
        if [[ -f ./artifacts/branch.txt && -f ./artifacts/run_id.txt ]]; then
          echo "branch=$(cat ./artifacts/branch.txt)" >> $GITHUB_ENV
          echo "original_run_id=$(cat ./artifacts/run_id.txt)" >> $GITHUB_ENV
        else
          BRANCH_NAME=$(echo $GITHUB_REF | cut -d "/" -f 3)
          echo "branch=$BRANCH_NAME" >> $GITHUB_ENV
        fi
    - name: Print Branch to be Checked Out
      run: |
        echo "Branch to checkout: ${{ env.branch }}"
    - name: Checkout the Code
      uses: actions/checkout@v4
      with:
        ref: ${{ env.branch }}
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Docker Diagnostics
      run: |
        docker system df
    - name: Host System Diagnostics
      run: |
        df -h
        du -sh *
    - name: Docker Cleanup
      run: |
        docker system prune -af
        docker volume prune -f
        docker builder prune -f
    - name: Builder Bootstrap
      run: docker buildx create --name devBuilder --use --bootstrap
    - name: Build the Docker Image
      run: docker buildx build -f DevUtils/docker/Dockerfile.sa --platform linux/amd64,linux/arm64 --tag swirlai/swirl-search:latest-sa --push .
    - name: Upload log files
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: log-files
        path: |
          logs/
          /var/log/syslog*
